name: Pre-Review Full Rule Enforcement

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - master
      - develop

jobs:
  full-review:
    name: Code Review and Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygit2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node Dependencies
        run: |
          npm ci || npm install --legacy-peer-deps

      - name: Run ESLint
        id: lint
        continue-on-error: true
        run: |
          npm run lint
          echo "LINT_STATUS=$?" >> $GITHUB_ENV

      - name: Run Security Audit
        id: audit
        continue-on-error: true
        run: |
          npm audit --audit-level=moderate
          echo "AUDIT_STATUS=$?" >> $GITHUB_ENV

      - name: Check for Dangerous Deletions
        id: deletion-check
        run: |
          DELETED_FILES=$(git diff --name-status origin/${{ github.base_ref }}...HEAD | grep ^D || true)
          if [ ! -z "$DELETED_FILES" ]; then
            echo "::warning::The following files are being deleted:"
            echo "$DELETED_FILES"
            echo "DELETIONS_FOUND=true" >> $GITHUB_ENV
          else
            echo "✅ No deletions detected"
            echo "DELETIONS_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Create Report Template
        run: |
          cat << 'EOF' > report_template.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <title>Diff Analysis Report</title>
            <style>
              body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif; }
              .container { max-width: 1000px; margin: 0 auto; padding: 20px; }
              table { border-collapse: collapse; width: 100%; max-width: 800px; margin: 20px 0; }
              th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
              th { background-color: #f5f5f5; font-weight: 600; }
              tr:nth-child(even) { background-color: #fafafa; }
              tr:hover { background-color: #f0f0f0; }
              .risk-high { color: #d73a49; font-weight: bold; }
              .risk-medium { color: #e36209; font-weight: bold; }
              .risk-low { color: #28a745; font-weight: bold; }
            </style>
          </head>
          <body>
            <div class="container">
              <h2>Semantic Diff Analysis Report</h2>
              <table>
                <tr><th>Change Type</th><th>Description</th><th>Risk Level</th></tr>
                <!-- ANALYSIS_RESULTS -->
              </table>
              <div id="summary"></div>
            </div>
          </body>
          </html>
          EOF

      - name: Semantic Diff Analysis
        id: diff-analysis
        run: |
          echo "=== Running Semantic Diff Analysis ==="
          base_branch="${{ github.base_ref }}"

          # Ensure complete history is available
          git fetch --no-tags --prune --unshallow 2>/dev/null || echo "::warning::Unable to fetch full history"
          git fetch origin "$base_branch:$base_branch" 2>log.txt || { 
            echo "::error::Failed to fetch $base_branch. Check log.txt for details"
            exit 1
          }

          # Initialize risk level
          risk="Low"
          results=""

          # Function to add a finding
          add_finding() {
            local change="$1"
            local description="$2"
            local risk_level="$3"
            results="$results<tr><td>$change</td><td>$description</td><td class=\"risk-$risk_level\">$risk_level</td></tr>"
          }

          # Validate merge base and perform diff analysis
          if git merge-base --is-ancestor "$base_branch" HEAD 2>/dev/null; then
            diff=$(git diff "$base_branch"...HEAD 2>log.txt || echo "")
            
            if [ -z "$diff" ]; then
              add_finding "No Changes" "No changes detected or diff failed" "low"
            else
              # Check for destructive operations
              if echo "$diff" | grep -E 'DROP|DELETE|TRUNCATE|rm\\s|unlink|localStorage\\.clear'; then
                add_finding "Destructive Operation" "⚠️ Potential destructive operation found (SQL/File/Storage)" "high"
                risk="High"
              fi

              # Check for unsafe functions
              if echo "$diff" | grep -E 'eval\\(|exec\\(|Function\\(|setTimeout\\([^,]*,|setInterval\\([^,]*,'; then
                add_finding "Unsafe Function" "⚠️ Use of unsafe functions detected" "medium"
                [ "$risk" != "High" ] && risk="Medium"
              fi

              # Check for sensitive data (refined regex)
              if echo "$diff" | grep -E '(^|[^a-zA-Z0-9])password[^a-zA-Z0-9]|[^a-zA-Z0-9]secret[^a-zA-Z0-9]|[^a-zA-Z0-9]token[^a-zA-Z0-9]'; then
                add_finding "Sensitive Data" "⚠️ Changes involving sensitive data detected" "medium"
                [ "$risk" != "High" ] && risk="Medium"
              fi

              # Check for large changes
              change_size=$(echo "$diff" | wc -c)
              if [ $change_size -gt 10000 ]; then
                add_finding "Large Change" "⚠️ Large code change ($(($change_size/1000))KB) detected" "medium"
                [ "$risk" != "High" ] && risk="Medium"
              fi

              # Add summary
              results="$results<tr><td colspan=\"2\"><strong>Overall Risk Assessment</strong></td><td class=\"risk-${risk:-low}\">${risk:-Low}</td></tr>"
            fi
          else
            add_finding "Error" "❌ No common ancestor with $base_branch. Skipping analysis" "low"
            risk="Low"
          fi

          # Generate final report with fallback
          cp report_template.html diff.html
          if [ -z "$results" ]; then
            sed -i "s|<!-- ANALYSIS_RESULTS -->|<tr><td colspan=\"3\">No significant findings</td></tr>|" diff.html
          else
            sed -i "s|<!-- ANALYSIS_RESULTS -->|$results|" diff.html
          fi
          
          # Set output for subsequent steps
          echo "RISK_LEVEL=${risk:-Low}" >> $GITHUB_ENV

      - name: Upload Diff for Review
        uses: actions/upload-artifact@v4
        with:
          name: code-diff-analysis
          path: diff.html
          retention-days: 7

      - name: Check Results
        if: always()
        run: |
          if [ "${{ env.LINT_STATUS }}" != "0" ]; then
            echo "::warning::Linting issues found. Please review the logs."
          fi
          if [ "${{ env.AUDIT_STATUS }}" != "0" ]; then
            echo "::warning::Security vulnerabilities detected. Please review the audit report."
          fi
          # Option 1: Keep failure for High risk (Recommended)
          if [ "${{ env.DELETIONS_FOUND }}" == "true" ] || [ "${{ env.RISK_LEVEL }}" == "High" ]; then
            echo "::error::Action required: File deletions or High risk detected. Manual review required."
            exit 1
          fi
          # Option 2: Allow High risk without failure (Uncomment to use)
          # if [ "${{ env.DELETIONS_FOUND }}" == "true" ]; then
          #   echo "::error::Action required: File deletions detected. Manual review required."
          #   exit 1
          # fi
