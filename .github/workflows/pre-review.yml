name: Pre-Review Full Rule Enforcement

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - master
      - develop

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  full-review:
    name: Code Review and Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygit2 gitpython

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install Node Dependencies
        run: |
          npm ci || npm install --legacy-peer-deps

      - name: Run ESLint
        id: lint
        continue-on-error: true
        run: |
          npm run lint -- --format json > lint-output.json || true
          echo "LINT_STATUS=$?" >> $GITHUB_ENV

      - name: Run Security Audit
        id: audit
        continue-on-error: true
        run: |
          npm audit --json > audit-output.json || true
          echo "AUDIT_STATUS=$?" >> $GITHUB_ENV

      - name: Check for Dangerous Deletions
        id: deletion-check
        run: |
          DELETED_FILES=$(git diff --name-status origin/${{ github.base_ref }}...HEAD | grep ^D || true)
          if [ ! -z "$DELETED_FILES" ]; then
            echo "::warning::The following files are being deleted:"
            echo "$DELETED_FILES"
            echo "DELETIONS_FOUND=true" >> $GITHUB_ENV
          else
            echo "‚úÖ No deletions detected"
            echo "DELETIONS_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Ensure analyze_diff.py is executable
        run: chmod +x scripts/analyze_diff.py

      - name: Run Semantic Diff Analysis
        id: diff-analysis
        run: |
          python scripts/analyze_diff.py
          if grep -q "High" diff.html; then
            echo "RISK_LEVEL=High" >> $GITHUB_ENV
          elif grep -q "Medium" diff.html; then
            echo "RISK_LEVEL=Medium" >> $GITHUB_ENV
          else
            echo "RISK_LEVEL=Low" >> $GITHUB_ENV
          fi

      - name: Upload Diff Report
        uses: actions/upload-artifact@v4
        with:
          name: code-diff-analysis
          path: diff.html
          retention-days: 7

      - name: Comment PR with Analysis Results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `
## üß™ Code Analysis Summary
- **Risk Level**: ${process.env.RISK_LEVEL}
- **Linting**: ${process.env.LINT_STATUS === '0' ? '‚úÖ Pass' : '‚ö†Ô∏è Issues Found'}
- **Security Audit**: ${process.env.AUDIT_STATUS === '0' ? '‚úÖ Pass' : '‚ö†Ô∏è Issues Found'}
- **File Deletions**: ${process.env.DELETIONS_FOUND === 'true' ? '‚ö†Ô∏è Yes' : '‚úÖ No'}

üìÑ [View Full Report](${context.payload.repository.html_url}/actions/runs/${context.runId}/artifacts)
`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Final Gate Check
        if: always()
        run: |
          if [ "${{ env.LINT_STATUS }}" != "0" ]; then
            echo "::warning::Lint issues found."
          fi
          if [ "${{ env.AUDIT_STATUS }}" != "0" ]; then
            echo "::warning::Security audit issues found."
          fi
          if [ "${{ env.DELETIONS_FOUND }}" == "true" ] || [ "${{ env.RISK_LEVEL }}" == "High" ]; then
            echo "::error::Manual review required due to deletions or high-risk changes."
            exit 1
          fi
